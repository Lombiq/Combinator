@model Piedone.Combinator.Models.CombinatorSettingsPart

@{
    Script.Require("jQuery").AtHead();
}

<script type="text/javascript">
    (function ($) {
    // Doing this with JS is not a nice solution but it seems there is no other way to make a POST to the action
        $.extend({
            combinator: {
                emptyCache: function () {
                    $("#button\\.EmptyCache").attr("disabled", "disabled");
                    var url = '@Url.Action("EmptyCache", new { Controller = "CombinatorAdmin", Area = "Piedone.Combinator"})';
                    var postData = { __RequestVerificationToken: "@Html.AntiForgeryTokenValueOrchard()" };
                    $.post(url, postData, function(response) {
                        location.reload();
                    });
                }
            }
        });
    })(jQuery);
</script>
           
<fieldset>
    <legend>@T("CSS/JS Combinator Settings")</legend>
    <span class="hint">@T("There are currently {0} combined resource files cached.", Model.CacheFileCount)</span>
    <ol>
        <li>
            @Html.EditorFor(m => m.CombineCDNResources)
            <label for="@Html.FieldIdFor(m => m.CombineCDNResources)" class="forcheckbox">@T("Combine CDN Resources")</label>
            @Html.ValidationMessageFor(m => m.CombineCDNResources)
            <span class="hint">@T("If checked, remote resources from CDNs will be also combined. Most of the time this defeats the purpose of CDNs but if the site fetches resources from many sources, for your targeted visitors it may be faster to serve them all combined from your site. Always measure the difference!")</span>
        </li>
        <li>
            @Html.EditorFor(m => m.MinifyResources)
            <label for="@Html.FieldIdFor(m => m.MinifyResources)" class="forcheckbox">@T("Minify resources")</label>
            @Html.ValidationMessageFor(m => m.MinifyResources)
        </li>
        <li>
            @Html.LabelFor(m => m.MinificationExcludeRegex, T("Excluded from minification"))
            @Html.TextBoxFor(m => m.MinificationExcludeRegex, new { @class = "text singleline" })
            @Html.ValidationMessageFor(m => m.MinificationExcludeRegex)
            <span class="hint">@T("Please provide a valid regular expression. Note that the full relative paths of all resources will be checked against this regex. The match is case-sensitive. Regex.IsMatch() is used internally, so look at it for how to use.")</span>
        </li>
    </ol>
    <button type="button" id="button.EmptyCache" name="button.EmptyCache" value="EmptyCache" onclick="$.combinator.emptyCache(); return false;">@T("Empty cache")</button>
</fieldset>